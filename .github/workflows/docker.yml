name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configurer Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3 : Se connecter à DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 4 : Construire et publier l'image Docker
      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yanishlali/node-app:latest

  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Installer Minikube
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      # Étape 3 : Démarrer Minikube
      - name: Start Minikube
        env:
          MINIKUBE_IN_STYLE: false
        run: |
          minikube start --driver=docker

      # Étape 4 : Configurer kubectl
      - name: Configure kubectl
        run: |
          minikube kubectl -- get pods -A

      # Étape 5 : Appliquer les manifests Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/tasks-app tasks-app=yanishlali/node-app:latest
          kubectl rollout status deployment/tasks-app
          kubectl apply -f ./k8s/deployment.yaml --validate=false
          kubectl apply -f ./k8s/service.yaml
          kubectl apply -f ./k8s/hpa.yaml
